[package]
name = "PlugOvr"
version = "0.2.6"
edition = "2021"
license-file = "LICENSE"
authors = ["Cornelius Wefelscheid <cw@plugovr.ai>"]
description = "PlugOvr provides AI assistance to every program."
homepage = "https://plugovr.ai"
#maintainers = ["Cornelius Wefelscheid <cw@plugovr.ai>"]
repository = "https://github.com/PlugOvr-ai/PlugOvr"
publish = false

[package.metadata.deb]
extended-description = """\
PlugOvr"""
depends = "$auto"
maintainer-scripts = "debian"


[package.metadata.bundle]
name = "PlugOvr"
identifier = "ai.plugovr"
icon = ["assets/logo.icns"]
copyright = "Copyright (c) PlugOvr.ai2024. All rights reserved."
category = "public.app-category.utilities"
short_description = "Bring AI to every application."
long_description = """
AI right at your fingertips.
Select text as context for the AI.
Get your assistance by pressing ctrl + alt + i.
"""
deb_depends = [
    "libglfw3-dev",
    "libgtk-3-dev",
    "libxcb1-dev",
    "libxcb-render0-dev",
    "libxcb-shape0-dev",
    "libxcb-xfixes0-dev",
    "libxdo-dev",
    "libgl1-mesa-glx",
    "libsdl2-2.0-0 (>= 2.0.5)",
]

osx_url_schemes = ["ai.plugovr"]
[package.metadata.bundle.privacy]
NSInputMonitoringUsageDescription = "PlugOvr needs input monitoring permissions to function properly."
NSAppleEventsUsageDescription = "PlugOvr needs automation permissions to interact with other applications."
NSScreenCaptureUsageDescription = "PlugOvr needs screen recording permissions to capture and display your screen."


[package.metadata.packager]
before-packaging-command = "cargo build --release"
product-name = "PlugOvr"
identifier = "ai.plugovr"
#resources = ["Cargo.toml", "src", "assets"]
icons = [
    "assets/32x32.png",
    "assets/128x128.png",
    "assets/logo.ico",
    "assets/logo.icns",
]
homepage = "https://plugovr.ai"
copyright = "Copyright (c) PlugOvr.ai 2024. All rights reserved."


[features]
default = ["three_d", "cs"]
three_d = ["egui_overlay/three_d"]
wgpu = ["egui_overlay/wgpu"]
glow = ["egui_overlay/glow"]
cuda = ["kalosm/cuda"]
metal = ["kalosm/metal"]
cs = ["plugovr_cs"]

[dependencies]
plugovr_cs = { path = "crates/plugovr_cs", optional = true }
plugovr_types = { path = "crates/plugovr_types" }

egui_overlay = { version = "0.8.0", git = "https://github.com/PlugOvr-ai/egui_overlay.git", default-features = false, features = [
    "egui_default",
    "glfw_default",
] }
tracing-subscriber = { version = "0.3", features = ["env-filter"] }
#egui_window_glfw_passthrough = "0.8.1"
#egui_render_three_d = { workspace = true }
screenshots = { version = "0.8.10" }
egui = { version = "0.28.1", default-features = false }
bytemuck = { version = "1", default-features = false }
raw-window-handle = { version = "0.6" }
three-d = "0.17.0"
three-d-asset = "0.7.0"
rdev = { version = "0.5.3", git = "https://github.com/AlexKnauth/rdev.git", rev = "18cd3ac7ddbbce7a4b33e4a5f1dc901418336342", features = [
    "serialize",
] }
serde_json = "1.0.120"
tokio = { version = "1.38.1", features = ["full", "macros"] }
reqwest = { version = "0.12.7", features = ["blocking", "multipart", "json"] }
itertools = "0.13.0"

egui_autocomplete = { version = "7.0.0" }
serde = { version = "1.0.210", features = ["derive"] }
dirs = "5.0.1"

#kalosm = { version = "0.3.2", features = ["language"] }
kalosm = { git = "https://github.com/floneum/floneum.git", rev = "90b6af9e9fcdd13007586eb5771decb24004c43b", features = [
    "language",
] }
strum = { version = "0.26.3", features = ["derive"] }
strum_macros = "0.26.4"
similar = "2.6.0"
image = { version = "0.25.5", features = ["png"] }
image_24 = { package = "image", version = "0.24.9" }
base64 = { version = "0.22.1" }
#copypasta = "0.10.1"
arboard = "3.4.1"
ollama-rs = { version = "0.2.1", features = ["stream"] }
regex = "1.11.1"
tray-icon = "0.19.2"


[target.'cfg(target_os = "linux")'.dependencies]
x11-clipboard = "0.9.2"
x11rb = "0.13.1"
enigo = "0.3.0"
gtk = "0.18.2"
glib = "0.20.6"

[target.'cfg(target_os = "windows")'.dependencies]
winapi = { version = "0.3", features = [
    "winuser",
    "winbase",
    "processthreadsapi",
] }
enigo = "0.3.0"

[target.'cfg(target_os = "macos")'.dependencies]
objc-foundation = "0.1"
objc_id = "0.1"
cocoa = "0.26.0"
objc = "0.2.7"
core-graphics = "0.24.0"
core-foundation = "0.10.0"
core-foundation-sys = "0.8"
active-win-pos-rs = "0.8.3"

[build-dependencies]
winresource = "0.1.17"

#[profile.release]
#lto = true
